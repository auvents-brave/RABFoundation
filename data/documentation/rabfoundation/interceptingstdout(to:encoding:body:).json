{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" any ","kind":"text"},{"text":"TextOutputStream","kind":"typeIdentifier","preciseIdentifier":"s:s16TextOutputStreamP"},{"text":", ","kind":"text"},{"text":"encoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":".","kind":"text"},{"text":"Encoding","kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV"},{"text":" = .utf8, ","kind":"text"},{"text":"body","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An output stream to receive the standard output text","type":"text"}]}],"name":"output"},{"content":[{"inlineContent":[{"type":"text","text":"The encoding to use when converting standard output into text."}],"type":"paragraph"}],"name":"encoding"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is executed immediately."}]}],"name":"body"}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The return value, if any, of the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure.","type":"text"}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Example usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var output: any TextOutputStream = \"\"","await InterceptingStdOut(to: &output) {","      FunctionUsingPrintToTraceThings()","}","#expect((output as! String).contains(\"wWhatever you expect to read in stdoutput\"))"]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Function","role":"symbol","externalID":"s:13RabFoundation18InterceptingStdOut2to8encoding4bodyxs16TextOutputStream_pz_SS0B0E8EncodingVxyXEtYalF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier","text":"TextOutputStream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"symbolKind":"func","modules":[{"name":"RabFoundation"}],"title":"InterceptingStdOut(to:encoding:body:)"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Additionally writes any data written to standard output into the given"},{"type":"text","text":" "},{"type":"text","text":"output stream."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)"},"variants":[{"paths":["\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/RabFoundation\/documentation\/RabFoundation"]]},"references":{"doc://RabFoundation/documentation/RabFoundation":{"url":"\/documentation\/rabfoundation","type":"topic","identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation","role":"collection","title":"RabFoundation","abstract":[{"type":"text","text":"A small pure and cross-platform Swift library (usable on Windows or WebAssembly for example). Without any specific context, it just includes reusable code, covering very different topics."}],"kind":"symbol"},"doc://RabFoundation/documentation/RabFoundation/InterceptingStdOut(to:encoding:body:)":{"abstract":[{"type":"text","text":"Additionally writes any data written to standard output into the given"},{"type":"text","text":" "},{"type":"text","text":"output stream."}],"kind":"symbol","title":"InterceptingStdOut(to:encoding:body:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier","text":"TextOutputStream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"type":"topic","url":"\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)","identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)"}}}