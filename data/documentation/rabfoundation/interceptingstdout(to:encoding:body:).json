{"kind":"symbol","metadata":{"roleHeading":"Function","symbolKind":"func","role":"symbol","externalID":"s:13RabFoundation18InterceptingStdOut2to8encoding4bodyxs16TextOutputStream_pz_SS0B0E8EncodingVxyXEtYalF","title":"InterceptingStdOut(to:encoding:body:)","modules":[{"name":"RabFoundation"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InterceptingStdOut","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"preciseIdentifier":"s:s16TextOutputStreamP","text":"TextOutputStream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoding","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InterceptingStdOut","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"text":"TextOutputStream","preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Encoding","preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier"},{"text":" = .utf8, ","kind":"text"},{"text":"body","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"output","content":[{"inlineContent":[{"type":"text","text":"An output stream to receive the standard output text"}],"type":"paragraph"}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The encoding to use when converting standard output into text."}]}]},{"name":"body","content":[{"inlineContent":[{"type":"text","text":"A closure that is executed immediately."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"The return value, if any, of the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" closure.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var output: any TextOutputStream = \"\"","await InterceptingStdOut(to: &output) {","      FunctionUsingPrintToTraceThings()","}","#expect((output as! String).contains(\"wWhatever you expect to read in stdoutput\"))"],"type":"codeListing"}],"kind":"content"}],"abstract":[{"type":"text","text":"Additionally writes any data written to standard output into the given"},{"type":"text","text":" "},{"type":"text","text":"output stream."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)"},"hierarchy":{"paths":[["doc:\/\/RabFoundation\/documentation\/RabFoundation"]]},"sections":[],"references":{"doc://RabFoundation/documentation/RabFoundation":{"identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation","role":"collection","type":"topic","title":"RabFoundation","url":"\/documentation\/rabfoundation","kind":"symbol","abstract":[{"text":"A small pure and cross-platform Swift library (usable on Windows or WebAssembly for example). Without any specific context, it just includes reusable code, covering very different topics.","type":"text"}]},"doc://RabFoundation/documentation/RabFoundation/InterceptingStdOut(to:encoding:body:)":{"type":"topic","role":"symbol","url":"\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InterceptingStdOut","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"text":"TextOutputStream","preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Encoding","preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"InterceptingStdOut(to:encoding:body:)","abstract":[{"text":"Additionally writes any data written to standard output into the given","type":"text"},{"text":" ","type":"text"},{"text":"output stream.","type":"text"}],"identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)","kind":"symbol"}}}