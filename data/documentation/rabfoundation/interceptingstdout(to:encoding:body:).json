{"hierarchy":{"paths":[["doc:\/\/RabFoundation\/documentation\/RabFoundation"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" any ","kind":"text"},{"text":"TextOutputStream","preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoding","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Encoding","preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier"},{"text":" = .utf8, ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"output","content":[{"inlineContent":[{"text":"An output stream to receive the standard output text","type":"text"}],"type":"paragraph"}]},{"name":"encoding","content":[{"type":"paragraph","inlineContent":[{"text":"The encoding to use when converting standard output into text.","type":"text"}]}]},{"name":"body","content":[{"inlineContent":[{"type":"text","text":"A closure that is executed immediately."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The return value, if any, of the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" closure."}]}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"code":["var output: any TextOutputStream = \"\"","await InterceptingStdOut(to: &output) {","      FunctionUsingPrintToTraceThings()","}","#expect((output as! String).contains(\"wWhatever you expect to read in stdoutput\"))"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Additionally writes any data written to standard output into the given"},{"type":"text","text":" "},{"type":"text","text":"output stream."}],"identifier":{"url":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:13RabFoundation18InterceptingStdOut2to8encoding4bodyxs16TextOutputStream_pz_SS0B0E8EncodingVxyXEtYalF","role":"symbol","symbolKind":"func","roleHeading":"Function","modules":[{"name":"RabFoundation"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier","text":"TextOutputStream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"InterceptingStdOut(to:encoding:body:)"},"references":{"doc://RabFoundation/documentation/RabFoundation":{"role":"collection","url":"\/documentation\/rabfoundation","type":"topic","identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation","abstract":[{"text":"A small pure and cross-platform Swift library (usable on Windows or WebAssembly for example). Without any specific context, it just includes reusable code, covering very different topics.","type":"text"}],"kind":"symbol","title":"RabFoundation"},"doc://RabFoundation/documentation/RabFoundation/InterceptingStdOut(to:encoding:body:)":{"title":"InterceptingStdOut(to:encoding:body:)","identifier":"doc:\/\/RabFoundation\/documentation\/RabFoundation\/InterceptingStdOut(to:encoding:body:)","abstract":[{"type":"text","text":"Additionally writes any data written to standard output into the given"},{"type":"text","text":" "},{"type":"text","text":"output stream."}],"url":"\/documentation\/rabfoundation\/interceptingstdout(to:encoding:body:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterceptingStdOut"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"preciseIdentifier":"s:s16TextOutputStreamP","kind":"typeIdentifier","text":"TextOutputStream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"type":"topic","kind":"symbol"}}}