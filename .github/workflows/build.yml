name: CI
permissions:
  contents: read
on:
  workflow_dispatch:
  #push:
  #  branches:
  #pull_request:
  #  branches:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  SWIFT_VERSION: '6.1'
jobs:
  build-swift-matrix:
    name: 'Native ${{ matrix.name }}'
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macOS 26
            runner: macos-26
            skip: false
          - name: macOS 15
            runner: macos-15
            skip: false
          - name: Ubuntu 22.04 LTS
            runner: ubuntu-22.04
            skip: false
          - name: Ubuntu 24.04 LTS
            runner: ubuntu-24.04
            skip: false
    steps:
      - uses: actions/checkout@v3
      - name: Skipped target warning
        if: matrix.skip == true
        run: 'echo "::warning::''${{ matrix.name }}'' is ignored for the moment."'
      - name: Setup Swift
        if: matrix.skip != true && matrix.runner != 'macos-26'
        uses: swift-actions/setup-swift@next #@v2.3.0
        with:
          swift-version: '${{ env.SWIFT_VERSION }}'
      - name: Check Swift Version
        run: swift --version

      - name: Build
        if: matrix.skip != true
        run: swift build
      - name: Run Tests
        if: matrix.skip != true
        run: swift test
  build-xcodebuild-matrix:
    name: '${{ matrix.name }}'
    runs-on: ${{ matrix.name == 'visionOS Simulator' && 'macos-latest-arm64' || 'macos-26' }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: iOS Simulator
            sdk: iphonesimulator
            destination: 'platform=iOS Simulator,name=iPhone 16,OS=18.5'
            run_tests: true
            skip: false
          - name: tvOS Simulator
            sdk: appletvsimulator
            destination: >-
              platform=tvOS Simulator,name=Apple TV 4K (3rd generation) (at 1080p),OS=18.5
            run_tests: true
            skip: false
          - name: watchOS Simulator (Build only)
            sdk: watchsimulator
            destination: 'platform=watchOS Simulator,name=Apple Watch Ultra 2 (49mm),OS=11.5'
            run_tests: false
            skip: false
          - name: visionOS Simulator
            sdk: xrssimulator
            destination: 'platform=visionOS Simulator,name=Apple Vision Pro,OS=1.0'
            run_tests: false
            skip: true
          - name: macCatalyst
            sdk: macosx
            destination: 'platform=macOS,variant=Mac Catalyst'
            run_tests: true
            skip: false
    steps:
      - uses: actions/checkout@v3
      - name: Skipped target warning
        if: matrix.skip == true
        run: 'echo "::warning::''${{ matrix.name }}'' is ignored for the moment."'
      - name: Setup Swift
        if: matrix.skip != true && matrix.runner != 'macos-26'
        uses: swift-actions/setup-swift@next #@v2.3.0
        with:
          swift-version: '${{ env.SWIFT_VERSION }}'
      - name: Check Swift Version
        run: swift --version

      - name: Build
        if: matrix.skip != true
        working-directory: ${{ github.workspace }}
        run: >
          xcodebuild
          -scheme rab-foundation
          -sdk ${{ matrix.sdk }}
          -destination '${{ matrix.destination }}'
      - name: Run Tests
        if: matrix.run_tests == true && matrix.skip != true
        working-directory: ${{ github.workspace }}
        run: >
          xcodebuild
          -scheme rab-foundation
          -sdk ${{ matrix.sdk }}
          -destination '${{ matrix.destination }}'
          -enableCodeCoverage NO
          -quiet
          test
  build-windows:
    name: Windows (6.2)
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v3
      - name: Setup Swift
        uses: compnerd/gha-setup-swift@main
        with:
          branch: swift-6.2-release
          tag: 6.2-RELEASE
      - name: Check Swift Version
        run: swift --version
      - name: Build
        run: swift build
      - name: Run Tests
        run: swift test
  build-wasm1:
    name: WebAssembly (6.1)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Swift SDK for wasm32-unknown-wasi
        run: >
          curl -LO https://github.com/swiftwasm/swift/releases/download/swift-wasm-6.1-RELEASE/swift-wasm-6.1-RELEASE-wasm32-unknown-wasi.artifactbundle.zip
          
          unzip -q swift-wasm-6.1-RELEASE-wasm32-unknown-wasi.artifactbundle.zip

          swift sdk install swift-wasm-6.1-RELEASE-wasm32-unknown-wasi.artifactbundle

      - run: swift --version

      - name: Build Swift package for WebAssembly
        run: swift build --swift-sdk wasm32-unknown-wasi
      - name: Test Swift Package (if tests are available)
        continue-on-error: true
        run: swift test --swift-sdk wasm32-unknown-wasi
  build-wasm2:
    name: WebAssembly (6.2)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Swift SDK for wasm32-unknown-wasip1
        run: >
          curl -LO https://github.com/swiftwasm/swift/releases/download/swift-wasm-6.2-RELEASE/swift-wasm-6.2-RELEASE-wasm32-unknown-wasip1.artifactbundle.zip

          unzip -q swift-wasm-6.2-RELEASE-wasm32-unknown-wasip1.artifactbundle.zip

          swift sdk install swift-wasm-6.2-RELEASE-wasm32-unknown-wasip1.artifactbundle

      - run: swift --version

      - name: Build Swift package for WebAssembly
        run: swift build --swift-sdk wasm32-unknown-wasip1
      - name: Test Swift Package (if tests are available)
        continue-on-error: true
        run: swift test --swift-sdk wasm32-unknown-wasip1



  build-wasm22:
    name: WebAssembly (Swift 6.2)
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - run: swift --version

      - name: Install Swift Toolchain (from swift.org)
        run: |
          curl -LO https://download.swift.org/swift-6.2.0-release/ubuntu2204/swift-6.2.0-RELEASE-ubuntu22.04.tar.gz
          mkdir -p $HOME/swift-6.2
          tar -xzf swift-6.2.0-RELEASE-ubuntu22.04.tar.gz -C $HOME/swift-6.2 --strip-components=1
          echo "$HOME/swift-6.2/usr/bin" >> $GITHUB_PATH

      - name: Install SwiftWasm toolchain 6.2
        run: |
          swift sdk install https://github.com/swiftwasm/swift/releases/download/swift-wasm-6.2-RELEASE/swift-wasm-6.2-RELEASE-wasm32-unknown-wasip1-threads.artifactbundle.zip --checksum df8dee548a572f9325e997e1378f4dbab1dbfc986f92a35887b313e19007835d
          echo "$HOME/swiftwasm/usr/bin" >> $GITHUB_PATH

      - name: Install WASI sysroot
        run: |
          curl -LO https://github.com/swiftwasm/wasi-sdk/releases/download/20191022.1/wasi-sdk-4.39g3025a5f47c04-linux.tar.gz
          mkdir -p $HOME/wasi-sdk
          tar -xzf wasi-sdk-4.39g3025a5f47c04-linux.tar.gz -C $HOME/wasi-sdk --strip-components=1
          echo "SWIFTFLAGS=-sdk $HOME/wasi-sdk/share/wasi-sysroot" >> $GITHUB_ENV

      - run: swift --version

      - name: Build Swift package for WebAssembly
        run: swift build --triple wasm32-unknown-wasip1 --build-path .build-wasm

      - name: Test Swift package (if available)
        continue-on-error: true
        run: swift test --triple wasm32-unknown-wasip1 --build-path .build-wasm
